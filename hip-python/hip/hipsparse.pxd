# MIT License
#
# Copyright (c) 2023-2024 Advanced Micro Devices, Inc.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# This file has been autogenerated, do not modify.

from libc cimport stdlib
from libc cimport string
from libc.stdint cimport *
cimport cpython.long
cimport cpython.buffer
ctypedef bint _Bool # bool is not a reserved keyword in C, _Bool is
from .hip cimport ihipStream_t, float2, double2 # C import structs/union types

cimport hip._util.types
from hip cimport chipsparse

cdef class hipsparseHandle_t(hip._util.types.Pointer): pass

cdef class hipsparseMatDescr_t(hip._util.types.Pointer): pass

cdef class hipsparseHybMat_t(hip._util.types.Pointer): pass

cdef class hipsparseColorInfo_t(hip._util.types.Pointer): pass

cdef class bsrsv2Info(hip._util.types.Pointer):
    cdef bint _is_ptr_owner

    cdef chipsparse.bsrsv2Info* getElementPtr(self)

    @staticmethod
    cdef bsrsv2Info fromPtr(void* ptr, bint owner=*)
    @staticmethod
    cdef bsrsv2Info fromPyobj(object pyobj)


cdef class bsrsm2Info(hip._util.types.Pointer):
    cdef bint _is_ptr_owner

    cdef chipsparse.bsrsm2Info* getElementPtr(self)

    @staticmethod
    cdef bsrsm2Info fromPtr(void* ptr, bint owner=*)
    @staticmethod
    cdef bsrsm2Info fromPyobj(object pyobj)


cdef class bsrilu02Info(hip._util.types.Pointer):
    cdef bint _is_ptr_owner

    cdef chipsparse.bsrilu02Info* getElementPtr(self)

    @staticmethod
    cdef bsrilu02Info fromPtr(void* ptr, bint owner=*)
    @staticmethod
    cdef bsrilu02Info fromPyobj(object pyobj)


cdef class bsric02Info(hip._util.types.Pointer):
    cdef bint _is_ptr_owner

    cdef chipsparse.bsric02Info* getElementPtr(self)

    @staticmethod
    cdef bsric02Info fromPtr(void* ptr, bint owner=*)
    @staticmethod
    cdef bsric02Info fromPyobj(object pyobj)


cdef class csrsv2Info(hip._util.types.Pointer):
    cdef bint _is_ptr_owner

    cdef chipsparse.csrsv2Info* getElementPtr(self)

    @staticmethod
    cdef csrsv2Info fromPtr(void* ptr, bint owner=*)
    @staticmethod
    cdef csrsv2Info fromPyobj(object pyobj)


cdef class csrsm2Info(hip._util.types.Pointer):
    cdef bint _is_ptr_owner

    cdef chipsparse.csrsm2Info* getElementPtr(self)

    @staticmethod
    cdef csrsm2Info fromPtr(void* ptr, bint owner=*)
    @staticmethod
    cdef csrsm2Info fromPyobj(object pyobj)


cdef class csrilu02Info(hip._util.types.Pointer):
    cdef bint _is_ptr_owner

    cdef chipsparse.csrilu02Info* getElementPtr(self)

    @staticmethod
    cdef csrilu02Info fromPtr(void* ptr, bint owner=*)
    @staticmethod
    cdef csrilu02Info fromPyobj(object pyobj)


cdef class csric02Info(hip._util.types.Pointer):
    cdef bint _is_ptr_owner

    cdef chipsparse.csric02Info* getElementPtr(self)

    @staticmethod
    cdef csric02Info fromPtr(void* ptr, bint owner=*)
    @staticmethod
    cdef csric02Info fromPyobj(object pyobj)


cdef class csrgemm2Info(hip._util.types.Pointer):
    cdef bint _is_ptr_owner

    cdef chipsparse.csrgemm2Info* getElementPtr(self)

    @staticmethod
    cdef csrgemm2Info fromPtr(void* ptr, bint owner=*)
    @staticmethod
    cdef csrgemm2Info fromPyobj(object pyobj)


cdef class pruneInfo(hip._util.types.Pointer):
    cdef bint _is_ptr_owner

    cdef chipsparse.pruneInfo* getElementPtr(self)

    @staticmethod
    cdef pruneInfo fromPtr(void* ptr, bint owner=*)
    @staticmethod
    cdef pruneInfo fromPyobj(object pyobj)


cdef class csru2csrInfo(hip._util.types.Pointer):
    cdef bint _is_ptr_owner

    cdef chipsparse.csru2csrInfo* getElementPtr(self)

    @staticmethod
    cdef csru2csrInfo fromPtr(void* ptr, bint owner=*)
    @staticmethod
    cdef csru2csrInfo fromPyobj(object pyobj)


cdef class hipsparseSpVecDescr_t(hip._util.types.Pointer): pass

cdef class hipsparseDnVecDescr_t(hip._util.types.Pointer): pass

cdef class hipsparseSpMatDescr_t(hip._util.types.Pointer): pass

cdef class hipsparseDnMatDescr_t(hip._util.types.Pointer): pass

cdef class hipsparseSpGEMMDescr(hip._util.types.Pointer):
    cdef bint _is_ptr_owner

    cdef chipsparse.hipsparseSpGEMMDescr* getElementPtr(self)

    @staticmethod
    cdef hipsparseSpGEMMDescr fromPtr(void* ptr, bint owner=*)
    @staticmethod
    cdef hipsparseSpGEMMDescr fromPyobj(object pyobj)


cdef class hipsparseSpSVDescr(hip._util.types.Pointer):
    cdef bint _is_ptr_owner

    cdef chipsparse.hipsparseSpSVDescr* getElementPtr(self)

    @staticmethod
    cdef hipsparseSpSVDescr fromPtr(void* ptr, bint owner=*)
    @staticmethod
    cdef hipsparseSpSVDescr fromPyobj(object pyobj)


cdef class hipsparseSpSMDescr(hip._util.types.Pointer):
    cdef bint _is_ptr_owner

    cdef chipsparse.hipsparseSpSMDescr* getElementPtr(self)

    @staticmethod
    cdef hipsparseSpSMDescr fromPtr(void* ptr, bint owner=*)
    @staticmethod
    cdef hipsparseSpSMDescr fromPyobj(object pyobj)
